{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>This project provides an HTTP backend for Terraform and OpenTofu that will save and manage state data in a MongoDB database.</p> <p>As the state is a JSON content, it makes sense to use the best-in-class database technology to work with it.</p> <p>The goal is to:</p> <ul> <li>provide an highly available, and performant, storage</li> <li>share a secured access to sensitive information</li> <li>value the infrastructure data</li> </ul>"},{"location":"project/","title":"Project","text":""},{"location":"project/#automation","title":"Automation","text":""},{"location":"project/#cicd-pipelines","title":"CI/CD pipelines","text":"<p>GitHub Actions are triggered to automate the integration and delivery of the application:</p> Role Definition file CI <code>.github/workflows/ci.yaml</code> Pages <code>.github/workflows/pages.yaml</code> PKG <code>.github/workflows/pkg.yaml</code> <p>GitHub configuration (General / Security / Secrets and Variables / Actions):</p> <ul> <li>DOCKERHUB_TOKEN</li> <li>DOCKERHUB_USERNAME</li> <li>SONAR_HOST_URL</li> <li>SONAR_ORG</li> <li>SONAR_PROJECT_KEY</li> <li>SONAR_TOKEN</li> </ul>"},{"location":"project/#backlog","title":"Backlog","text":""},{"location":"project/#v20","title":"V2.0","text":"<p>New features:</p> <ul> <li> Store in the database only one version of the state in tf_state (the latest) and save the others in tf_state_revision</li> <li> Send traces, logs, metrics to OpenTelemetry Collector</li> </ul>"},{"location":"project/#design","title":"Design","text":""},{"location":"project/#programming-languages","title":"Programming languages","text":"<p>The code is mainly written in C# / .NET: open-source, cross-platform (Linux/Windows), highly performant, object-oriented.</p>"},{"location":"quickstart/","title":"Quickstart","text":""},{"location":"quickstart/#demo","title":"Demo","text":"<p>Before looking at all the options, let's do a quick demonstration of the application.</p> Containers (Docker Compose)Kubernetes (Helm) <pre><code>docker compose\n</code></pre> <pre><code>helm upgrade --install tfbackend https://github.com/devpro/helm-charts/releases/download/terraform-backend-mongodb-0.1.0/terraform-backend-mongodb-0.1.0.tgz --create-namespace --namespace tfbackend\n</code></pre>"},{"location":"quickstart/#samples","title":"Samples","text":"<ul> <li>Make local actions on files: <code>samples/local-files/README.md</code></li> <li>Run NGINX container with Docker: <code>samples/docker-nginx/README.md</code></li> </ul>"},{"location":"setup/","title":"Setup","text":""},{"location":"setup/#requirements","title":"Requirements","text":""},{"location":"setup/#database-server","title":"Database server","text":"<p>Make sure you have access to a MongoDB database (with a connection string containing a user that have admin permissions).</p> <p>The MongoDB server can run:</p> <ul> <li>On a machine from binaries</li> <li>On multiple machines binaries</li> <li>In a container</li> <li>In a Kubernetes cluster</li> <li>In MongoDB Atlas (free tier available!)</li> </ul> <p>Warning</p> <p>Double check any network/security restrictions such as MongoDB IP access list as the application needs to access the MongoDB server</p>"},{"location":"setup/#database-indexes","title":"Database indexes","text":"<p>Add indexes for optimal performances:</p> <pre><code>MONGODB_URI=mongodb://&lt;myserver&gt;:27017/&lt;mydb&gt;\ncurl -O https://raw.githubusercontent.com/devpro/terraform-backend-mongodb/refs/heads/main/scripts/tfbeadm\ntfbeadm create-indexes\n</code></pre> <p>Warning</p> <p><code>mongosh</code> or <code>Docker</code> packages must be available on the machine running the commands</p>"},{"location":"setup/#installation","title":"Installation","text":""},{"location":"setup/#kubernetes","title":"Kubernetes","text":"<p>Use the official Helm chart:</p> <pre><code># adds the chart repository\nhelm repo add devpro https://devpro.github.io/helm-charts\nhelm repo update\n\n# installs the chart\nhelm upgrade --install tfbackend devpro/terraform-backend-mongodb [-f values.yaml] --create-namespace --namespace tfbackend\n</code></pre> <p>Values file examples:</p> Embedded MongoDB chartTraefik Ingress with Let's Encrypt cert-manager issuerDevelopment environment with Swagger <pre><code>mongodb:\n  enabled: true\n  auth:\n    rootPassword: admin\nwebapi:\n  db:\n    connectionString: mongodb://root:admin@tfbackend-mongodb:27017/terraform_backend_beta?authSource=admin\n    databaseName: terraform_backend_beta\n</code></pre> <pre><code>webapi:\n  host: tfbackend.mydomain\ningress:\n  enabled: true\n  className: traefik\n  annotations:\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n</code></pre> <pre><code>dotnet:\n  environment: Development\n  enableSwagger: true\n  enableOpenTelemetry: false\n</code></pre>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#tenant-authentication","title":"Tenant authentication","text":"<p>API calls are secured through tenant isolation and user authentication, which are stored in the MongoDB database.</p> <p>You can add a user with the following commands (replace the parameters):</p> <pre><code>MONGODB_URI=mongodb://&lt;myserver&gt;:27017/&lt;mydb&gt;\ncurl -O https://raw.githubusercontent.com/devpro/terraform-backend-mongodb/refs/heads/main/scripts/tfbeadm\ntfbeadm create-user &lt;myusername&gt; &lt;mypassword&gt; &lt;mytenant&gt;\n</code></pre>"},{"location":"usage/#client-configuration","title":"Client configuration","text":"<p>In the tf file, configure the backend to use the REST API:</p> <pre><code>terraform {\n  backend \"http\" {\n    address                = \"http://&lt;api-url&gt;/&lt;mytenant&gt;/state/&lt;project&gt;\"\n    lock_address           = \"http://&lt;api-url&gt;/&lt;mytenant&gt;/state/&lt;project&gt;/lock\"\n    unlock_address         = \"http://&lt;api-url&gt;/&lt;mytenant&gt;/state/&lt;project&gt;/lock\"\n    lock_method            = \"POST\"\n    unlock_method          = \"DELETE\"\n    username               = \"&lt;myusername&gt;\"\n    password               = \"&lt;mypassword&gt;\"\n    #skip_cert_verification = \"true\"\n  }\n}\n</code></pre> <p>And now, you can take advantage of a MongoDB backend for your Terraform/OpenTofu actions!</p>"}]}